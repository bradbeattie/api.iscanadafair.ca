# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-05-01 04:58
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields.json
import elections.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code_letter', models.CharField(db_index=True, max_length=1)),
                ('code_number', models.PositiveSmallIntegerField(db_index=True)),
                ('title', models.TextField()),
                ('short_title', models.CharField(max_length=200)),
                ('links', django_extensions.db.fields.json.JSONField(default=dict)),
            ],
            options={
                'ordering': ('session__number', 'code_letter', 'code_number'),
            },
        ),
        migrations.CreateModel(
            name='Committee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=4, unique=True)),
                ('name', models.CharField(max_length=200)),
                ('chamber', models.PositiveSmallIntegerField(choices=[(1, 'House of Commons'), (2, 'Senate')])),
                ('links', django_extensions.db.fields.json.JSONField(default=dict)),
            ],
            options={
                'ordering': ('code',),
            },
        ),
        migrations.CreateModel(
            name='ElectionCandidate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('profession', models.CharField(max_length=200)),
                ('ballots', models.PositiveIntegerField(null=True)),
                ('ballots_percentage', models.DecimalField(decimal_places=3, help_text='Aggregate', max_digits=4, null=True)),
                ('elected', models.BooleanField()),
                ('acclaimed', models.BooleanField()),
            ],
            options={
                'ordering': ('election_riding__date', 'election_riding__riding__province__name', 'election_riding__riding__name', 'name'),
            },
        ),
        migrations.CreateModel(
            name='ElectionRiding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(db_index=True)),
                ('ballots_rejected', models.PositiveIntegerField(null=True)),
                ('registered', models.PositiveIntegerField(null=True)),
                ('population', models.PositiveIntegerField(null=True)),
                ('links', django_extensions.db.fields.json.JSONField(default=dict)),
            ],
            options={
                'ordering': ('date', 'riding__province__name', 'riding__name'),
            },
        ),
        migrations.CreateModel(
            name='GeneralElection',
            fields=[
                ('number', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('date_start', models.DateField()),
                ('date_end', models.DateField(null=True)),
                ('population', models.PositiveIntegerField(help_text='Aggregate')),
                ('registered', models.PositiveIntegerField(help_text='Aggregate')),
                ('ballots_total', models.PositiveIntegerField(help_text='Aggregate, includes rejected ballots')),
                ('turnout', models.DecimalField(decimal_places=3, help_text='Aggregate', max_digits=3)),
                ('links', django_extensions.db.fields.json.JSONField(default=dict)),
                ('wiki_info_box', django_extensions.db.fields.json.JSONField(default=dict)),
            ],
            options={
                'ordering': ('date_end',),
            },
        ),
        migrations.CreateModel(
            name='Parliament',
            fields=[
                ('number', models.PositiveSmallIntegerField(primary_key=True, serialize=False)),
                ('links', django_extensions.db.fields.json.JSONField(default=dict)),
                ('seats', models.PositiveSmallIntegerField(help_text='Aggregate')),
            ],
            options={
                'ordering': ('number',),
            },
        ),
        migrations.CreateModel(
            name='Parliamentarian',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('name_variants', django_extensions.db.fields.json.JSONField(default=dict)),
                ('photo', models.ImageField(upload_to=elections.models.get_photo_path)),
                ('links', django_extensions.db.fields.json.JSONField(default=dict)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Party',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('name_variants', django_extensions.db.fields.json.JSONField(default=dict)),
                ('color', models.CharField(max_length=20)),
                ('links', django_extensions.db.fields.json.JSONField(default=dict)),
                ('related', models.ManyToManyField(blank=True, related_name='_party_related_+', to='elections.Party')),
            ],
            options={
                'verbose_name_plural': 'parties',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Province',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('name_variants', django_extensions.db.fields.json.JSONField(default=dict)),
                ('links', django_extensions.db.fields.json.JSONField(default=dict)),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Riding',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('name_variants', django_extensions.db.fields.json.JSONField(default=dict)),
                ('links', django_extensions.db.fields.json.JSONField(default=dict)),
                ('province', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ridings', to='elections.Province')),
                ('related_geographically', models.ManyToManyField(blank=True, related_name='_riding_related_geographically_+', to='elections.Riding')),
                ('related_historically', models.ManyToManyField(blank=True, related_name='_riding_related_historically_+', to='elections.Riding')),
            ],
            options={
                'ordering': ('province__name', 'name'),
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(db_index=True)),
                ('date_start', models.DateField(db_index=True)),
                ('date_end', models.DateField(db_index=True, null=True)),
                ('sittings_house', models.PositiveSmallIntegerField()),
                ('sittings_senate', models.PositiveSmallIntegerField()),
                ('links', django_extensions.db.fields.json.JSONField(default=dict)),
                ('parliament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='elections.Parliament')),
            ],
            options={
                'ordering': ('parliament__number', 'number'),
            },
        ),
        migrations.CreateModel(
            name='Sitting',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(db_index=True)),
                ('date', models.DateField(db_index=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sittings', to='elections.Session')),
            ],
        ),
        migrations.CreateModel(
            name='SittingVote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveSmallIntegerField(db_index=True)),
                ('context', models.TextField()),
                ('links', django_extensions.db.fields.json.JSONField(default=dict)),
                ('bill', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sitting_votes', to='elections.Bill')),
                ('sitting', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sitting_votes', to='elections.Sitting')),
            ],
        ),
        migrations.CreateModel(
            name='SittingVoteParticipant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recorded_vote', models.PositiveSmallIntegerField(choices=[(1, 'Nay'), (2, 'Yea'), (3, 'Paired'), (4, 'Abstained')])),
                ('parliamentarian', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sitting_vote_participants', to='elections.Parliamentarian')),
                ('party', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sitting_vote_participants', to='elections.Party')),
                ('sitting_vote', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sitting_vote_participants', to='elections.SittingVote')),
            ],
        ),
        migrations.AddField(
            model_name='parliament',
            name='government_party',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='governed_parliaments', to='elections.Party'),
        ),
        migrations.AddField(
            model_name='generalelection',
            name='parliament',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='general_election', to='elections.Parliament'),
        ),
        migrations.AddField(
            model_name='electionriding',
            name='by_election_parliament',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='by_election_ridings', to='elections.Parliament'),
        ),
        migrations.AddField(
            model_name='electionriding',
            name='general_election',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='election_ridings', to='elections.GeneralElection'),
        ),
        migrations.AddField(
            model_name='electionriding',
            name='riding',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='election_ridings', to='elections.Riding'),
        ),
        migrations.AddField(
            model_name='electioncandidate',
            name='election_riding',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='election_candidates', to='elections.ElectionRiding'),
        ),
        migrations.AddField(
            model_name='electioncandidate',
            name='parliamentarian',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='election_candidates', to='elections.Parliamentarian'),
        ),
        migrations.AddField(
            model_name='electioncandidate',
            name='party',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='election_candidates', to='elections.Party'),
        ),
        migrations.AddField(
            model_name='bill',
            name='committees',
            field=models.ManyToManyField(related_name='bills', to='elections.Committee'),
        ),
        migrations.AddField(
            model_name='bill',
            name='session',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bills', to='elections.Session'),
        ),
        migrations.AlterUniqueTogether(
            name='sittingvoteparticipant',
            unique_together=set([('sitting_vote', 'parliamentarian')]),
        ),
        migrations.AlterUniqueTogether(
            name='sittingvote',
            unique_together=set([('sitting', 'number')]),
        ),
        migrations.AlterUniqueTogether(
            name='sitting',
            unique_together=set([('session', 'number')]),
        ),
        migrations.AlterUniqueTogether(
            name='session',
            unique_together=set([('parliament', 'number')]),
        ),
        migrations.AlterUniqueTogether(
            name='riding',
            unique_together=set([('name', 'province')]),
        ),
        migrations.AlterIndexTogether(
            name='electionriding',
            index_together=set([('by_election_parliament', 'riding'), ('general_election', 'riding')]),
        ),
        migrations.AlterUniqueTogether(
            name='bill',
            unique_together=set([('session', 'code_letter', 'code_number')]),
        ),
    ]
